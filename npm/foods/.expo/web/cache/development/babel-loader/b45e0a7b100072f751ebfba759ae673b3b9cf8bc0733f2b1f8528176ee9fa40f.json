{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport CsvDownloader from 'react-axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ExportCsv() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    userData = _useState2[0],\n    setUserdata = _useState2[1];\n  useEffect(function () {\n    var getUserdata = function () {\n      var _ref = _asyncToGenerator(function* () {\n        var requestData = yield fetch(\"http://localhost:5000/api/user\");\n        var responceData = yield requestData.json();\n        setUserdata(responceData);\n      });\n      return function getUserdata() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    getUserdata();\n  }, []);\n  return _jsx(React.Fragment, {\n    children: _jsx(\"div\", {\n      className: \"container\",\n      children: _jsx(\"div\", {\n        className: \"row\",\n        children: _jsxs(\"div\", {\n          className: \"col-md-12\",\n          children: [_jsx(\"h5\", {\n            className: \"mt-3\",\n            children: \"Export Data in Csv\"\n          }), _jsxs(\"table\", {\n            className: \"table table-bordered\",\n            children: [_jsx(\"thead\", {\n              children: _jsxs(\"tr\", {\n                children: [_jsx(\"th\", {\n                  children: \"#\"\n                }), _jsx(\"th\", {\n                  children: \"Username\"\n                }), _jsx(\"th\", {\n                  children: \"Email\"\n                }), _jsx(\"th\", {\n                  children: \"Phone No\"\n                }), _jsx(\"th\", {\n                  children: \"Address\"\n                }), _jsx(\"th\", {\n                  children: \"Status\"\n                })]\n              })\n            }), _jsx(\"tbody\", {\n              children: userData.map(function (uData, index) {\n                return _jsxs(\"tr\", {\n                  children: [_jsx(\"td\", {\n                    children: index + 1\n                  }), _jsx(\"td\", {\n                    children: uData.username\n                  }), _jsx(\"td\", {\n                    children: uData.email\n                  }), _jsx(\"td\", {\n                    children: uData.phone\n                  }), _jsx(\"td\", {\n                    children: uData.address\n                  }), _jsx(\"td\", {\n                    children: uData.status === 1 ? \"Active\" : \"Inactive\"\n                  })]\n                }, index);\n              })\n            })]\n          }), _jsx(CsvDownloader, {\n            datas: userData,\n            text: \"Export CSV\",\n            filename: \"userdata_\" + new Date().toLocaleString(),\n            extension: \".csv\",\n            className: \"btn btn-success\"\n          })]\n        })\n      })\n    })\n  });\n}\nexport default ExportCsv;","map":{"version":3,"names":["React","useState","useEffect","CsvDownloader","jsx","_jsx","jsxs","_jsxs","ExportCsv","_useState","_useState2","_slicedToArray","userData","setUserdata","getUserdata","_ref","_asyncToGenerator","requestData","fetch","responceData","json","apply","arguments","Fragment","children","className","map","uData","index","username","email","phone","address","status","datas","text","filename","Date","toLocaleString","extension"],"sources":["C:/npm/foods/src/back/Exportcsv.js"],"sourcesContent":["import React,{ useState, useEffect} from \"react\";\r\n\r\nimport CsvDownloader from 'react-axios';\r\n\r\nfunction ExportCsv()\r\n{\r\n    const[userData, setUserdata]= useState([]);\r\n\r\n    useEffect( ()=>{\r\n        const getUserdata= async()=>{\r\n            const requestData= await fetch(\"http://localhost:5000/api/user\");\r\n            const responceData= await requestData.json();\r\n            //console.log(responceData);\r\n            setUserdata(responceData);\r\n\r\n        }\r\n        getUserdata();\r\n    },[]);\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h5 className=\"mt-3\">Export Data in Csv</h5>\r\n                         <table className=\"table table-bordered\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Username</th>\r\n                                    <th>Email</th>\r\n                                    <th>Phone No</th>\r\n                                    <th>Address</th>\r\n                                    <th>Status</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    userData.map((uData, index)=>(\r\n                                        <tr key={index}>\r\n                                        <td>{index+1}</td>\r\n                                        <td>{uData.username}</td>\r\n                                        <td>{uData.email}</td>\r\n                                        <td>{uData.phone}</td>\r\n                                        <td>{uData.address}</td>\r\n                                        <td>{uData.status===1?\"Active\":\"Inactive\"}</td>\r\n    \r\n                                    </tr>\r\n                                    ))\r\n                                }\r\n                               \r\n                            </tbody>\r\n\r\n                         </table>                      \r\n                     <CsvDownloader \r\n                     datas={userData}\r\n                     text=\"Export CSV\"\r\n                     filename={`userdata_`+new Date().toLocaleString()}\r\n                     extension=\".csv\"\r\n                     className=\"btn btn-success\"\r\n                     />\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default ExportCsv;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}