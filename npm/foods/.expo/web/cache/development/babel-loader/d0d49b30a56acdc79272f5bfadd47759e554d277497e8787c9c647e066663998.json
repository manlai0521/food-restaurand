{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { PaymentElement } from \"@stripe/react-stripe-js\";\nimport { useState } from \"react\";\nimport { useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CheckoutForm() {\n  var stripe = useStripe();\n  var elements = useElements();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isProcessing = _useState4[0],\n    setIsProcessing = _useState4[1];\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* (e) {\n      e.preventDefault();\n      if (!stripe || !elements) {\n        return;\n      }\n      setIsProcessing(true);\n      var _yield$stripe$confirm = yield stripe.confirmPayment({\n          elements: elements,\n          confirmParams: {\n            return_url: window.location.origin + \"/completion\"\n          }\n        }),\n        error = _yield$stripe$confirm.error;\n      if (error.type === \"card_error\" || error.type === \"validation_error\") {\n        setMessage(error.message);\n      } else {\n        setMessage(\"An unexpected error occured.\");\n      }\n      setIsProcessing(false);\n    });\n    return function handleSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [_jsx(PaymentElement, {\n      id: \"payment-element\"\n    }), _jsx(\"button\", {\n      disabled: isProcessing || !stripe || !elements,\n      id: \"submit\",\n      children: _jsx(\"span\", {\n        id: \"button-text\",\n        children: isProcessing ? \"Processing ... \" : \"Pay now\"\n      })\n    }), message && _jsx(\"div\", {\n      id: \"payment-message\",\n      children: message\n    })]\n  });\n}","map":{"version":3,"names":["PaymentElement","useState","useStripe","useElements","jsx","_jsx","jsxs","_jsxs","CheckoutForm","stripe","elements","_useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","isProcessing","setIsProcessing","handleSubmit","_ref","_asyncToGenerator","e","preventDefault","_yield$stripe$confirm","confirmPayment","confirmParams","return_url","window","location","origin","error","type","_x","apply","arguments","id","onSubmit","children","disabled"],"sources":["C:/npm/foods/src/CheckoutForm.js"],"sourcesContent":["import { PaymentElement } from \"@stripe/react-stripe-js\";\r\nimport { useState } from \"react\";\r\nimport { useStripe, useElements } from \"@stripe/react-stripe-js\";\r\n\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [message, setMessage] = useState(null);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    setIsProcessing(true);\r\n\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        // Make sure to change this to your payment completion page\r\n        return_url: `${window.location.origin}/completion`,\r\n      },\r\n    });\r\n\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n    } else {\r\n      setMessage(\"An unexpected error occured.\");\r\n    }\r\n\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  return (\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <PaymentElement id=\"payment-element\" />\r\n      <button disabled={isProcessing || !stripe || !elements} id=\"submit\">\r\n        <span id=\"button-text\">\r\n          {isProcessing ? \"Processing ... \" : \"Pay now\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {message && <div id=\"payment-message\">{message}</div>}\r\n    </form>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,cAAc,QAAQ,yBAAyB;AACxD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjE,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,IAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,IAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,IAAAQ,SAAA,GAA8BV,QAAQ,CAAC,IAAI,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,OAAO,GAAAF,UAAA;IAAEG,UAAU,GAAAH,UAAA;EAC1B,IAAAI,UAAA,GAAwCf,QAAQ,CAAC,KAAK,CAAC;IAAAgB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAhDE,YAAY,GAAAD,UAAA;IAAEE,eAAe,GAAAF,UAAA;EAEpC,IAAMG,YAAY;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,CAAC,EAAK;MAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;MAElB,IAAI,CAACf,MAAM,IAAI,CAACC,QAAQ,EAAE;QAGxB;MACF;MAEAS,eAAe,CAAC,IAAI,CAAC;MAErB,IAAAM,qBAAA,SAAwBhB,MAAM,CAACiB,cAAc,CAAC;UAC5ChB,QAAQ,EAARA,QAAQ;UACRiB,aAAa,EAAE;YAEbC,UAAU,EAAKC,MAAM,CAACC,QAAQ,CAACC,MAAM;UACvC;QACF,CAAC,CAAC;QANMC,KAAK,GAAAP,qBAAA,CAALO,KAAK;MAQb,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,IAAID,KAAK,CAACC,IAAI,KAAK,kBAAkB,EAAE;QACpElB,UAAU,CAACiB,KAAK,CAAClB,OAAO,CAAC;MAC3B,CAAC,MAAM;QACLC,UAAU,CAAC,8BAA8B,CAAC;MAC5C;MAEAI,eAAe,CAAC,KAAK,CAAC;IACxB,CAAC;IAAA,gBA1BKC,YAAYA,CAAAc,EAAA;MAAA,OAAAb,IAAA,CAAAc,KAAA,OAAAC,SAAA;IAAA;EAAA,GA0BjB;EAED,OACE7B,KAAA;IAAM8B,EAAE,EAAC,cAAc;IAACC,QAAQ,EAAElB,YAAa;IAAAmB,QAAA,GAC7ClC,IAAA,CAACL,cAAc;MAACqC,EAAE,EAAC;IAAiB,CAAE,CAAC,EACvChC,IAAA;MAAQmC,QAAQ,EAAEtB,YAAY,IAAI,CAACT,MAAM,IAAI,CAACC,QAAS;MAAC2B,EAAE,EAAC,QAAQ;MAAAE,QAAA,EACjElC,IAAA;QAAMgC,EAAE,EAAC,aAAa;QAAAE,QAAA,EACnBrB,YAAY,GAAG,iBAAiB,GAAG;MAAS,CACzC;IAAC,CACD,CAAC,EAERJ,OAAO,IAAIT,IAAA;MAAKgC,EAAE,EAAC,iBAAiB;MAAAE,QAAA,EAAEzB;IAAO,CAAM,CAAC;EAAA,CACjD,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}